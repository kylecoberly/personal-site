@mixin buzzy-background {
  background: linear-gradient(
    to bottom,
    transparentize($right-color-9, 0.8),
    transparentize($right-color-9, 0.8) 50%,
    transparentize($right-color-9, 0.9) 50%,
    transparentize($right-color-9, 0.9)
  );
  background-size: 100% $large;
  animation: 1.5s infinite buzzy-scanlines;
  @keyframes buzzy-scanlines {
    from {
      background-position: 0 0;
    }
    to {
      background-position: 0 100%;
    }
  }
}

@mixin burst-animation($name, $rotation, $top, $right) {
  @keyframes #{$name} {
    from {
      top: 100%;
      right: 50%;
      transform: rotateZ(0deg);
      opacity: 0;
    }
    to {
      top: $top;
      right: $right;
      transform: rotateZ($rotation);
      opacity: 1;
    }
  }
}

@mixin caret($left, $bottom, $rotation, $color) {
  &::before {
    border: 24px solid transparent;
    border-bottom: 0;
    height: 0;
    width: 0;
    content: " ";
    display: block;
    position: absolute;
    transform-origin: center;

    border-top: 24px solid $color;
    border-top-width: 24px;
    left: $left;
    bottom: $bottom;
    transform: rotate($rotation) skew(-24deg) translateY(18px);
    @media (max-width: $small-breakpoint) {
      & {
        border: 16px solid transparent;
        border-top: 16px solid $color;
        border-top-width: 16px;
      }
    }
  }
}

@mixin static-caret() {
  &::before {
    left: 0;
    bottom: -10px;
    transform: rotate(-90deg) skew(-4deg) translateY(13px);
  }
}

@mixin in-view-animation($name, $rotation, $top, $right) {
  position: absolute;
  top: 100%;
  // right: 50%;
  transform: rotateZ(0deg);
  opacity: 0;
  &.in-view {
    @include burst-animation($name, $rotation, $top, $right);
    animation: 3s cubic-bezier(0, 1, 0.1, 0.96) forwards $name;
  }
}

#resume {
  background-color: transparentize($right-color-9, 0.5);
  padding-top: 0; // Children are absolutely positioned
  position: relative;
  overflow-y: hidden;
  @media (max-width: $small-breakpoint) {
    & {
      padding-top: 0;
      padding-bottom: 0;
    }
  }
  h2 {
    @include hide;
  }
  .content-wrapper {
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    @media (max-width: $small-breakpoint) {
      & {
        padding: 0;
      }
    }
    .comic-wrapper {
      position: relative;
      height: 800px; // Fixed container height
      width: 100%;
      top: -270px;
      @media (max-width: $medium-breakpoint) {
        & {
          height: 490px;
          top: -95px;
        }
      }
      @media (max-width: $small-breakpoint) {
        & {
          height: 350px;
          top: 0;
          overflow: hidden;
        }
      }
      .speech-bubble {
        padding: $large;
        background-color: $white;
        filter: drop-shadow(0 2px 2px $gray-5); // Gets the caret too
        @include speech-bubble-type;
        @media (max-width: $small-breakpoint) {
          & {
            padding: $baseline;
            @include in-view-animation(cta-burst, 0deg, 0, 0);
          }
        }
      }
      img {
        width: unset;
        @include in-view-animation(image-burst, 0, 100px, auto);
        @media (max-width: $medium-breakpoint) {
          & {
            @include in-view-animation(image-burst, -100px, -150px, 0);
          }
        }
        @media (max-width: $small-breakpoint) {
          & {
            @include in-view-animation(image-burst, -100px, -250px, -20%);
          }
        }
      }
      .section-label {
        background-color: $gray-9;
        font-size: $font-large;
        padding: $large;
        width: 170px;
        @include caret(120px, -12px, 90deg, $gray-9);
        @include in-view-animation(cta-burst, -8deg, 306px, 650px);
        @media (max-width: $medium-breakpoint) {
          & {
            @include caret(120px, -12px, 90deg, $gray-9);
            @include in-view-animation(cta-burst, -8deg, 150px, 450px);
          }
        }
        @media (max-width: $small-breakpoint) {
          & {
            width: auto;
            padding: $baseline;
            font-size: $font-small;
            @include caret(97px, -18px, 90deg, $gray-9);
            @include in-view-animation(cta-burst, 0deg, 30px, 50%);
          }
        }
      }
      .resume {
        @include caret(30px, -23px, 127deg, $white);
        @include in-view-animation(resume-burst, 19deg, 360px, 300px);
        @media (max-width: $medium-breakpoint) {
          & {
            @include in-view-animation(resume-burst, 19deg, 120px, 175px);
          }
        }
        @media (max-width: $small-breakpoint) {
          & {
            @include static-caret;
            @include in-view-animation(resume-burst, 0deg, 20px, 7%);
          }
        }
      }
      .talks {
        @include caret(-28px, 41px, -36deg, $white);
        @include in-view-animation(work-sample-burst, -3deg, 480px, 200px);
        @media (max-width: $medium-breakpoint) {
          & {
            @include in-view-animation(work-sample-burst, -3deg, 250px, 100px);
          }
        }
        @media (max-width: $small-breakpoint) {
          & {
            @include static-caret;
            @include in-view-animation(
              work-sample-burst,
              0deg,
              170px,
              7%
            ); // Order is flipped on mobile
          }
        }
      }
      .notes {
        @include caret(-46px, 30px, 218deg, $white);
        @include in-view-animation(notes-burst, 14deg, 600px, 220px);
        @media (max-width: $medium-breakpoint) {
          & {
            @include in-view-animation(notes-burst, 14deg, 400px, 120px);
          }
        }
        @media (max-width: $small-breakpoint) {
          & {
            @include static-caret;
            @include in-view-animation(
              notes-burst,
              0deg,
              95px,
              7%
            ); // Order is flipped on mobile
          }
        }
      }
    }
  }
}

#resume-background-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  @include buzzy-background;
}
